// This config is in the KDL format: https://kdl.dev
// "/-" comments out the following node.

input {
    // focus-follows-mouse
    keyboard {
        xkb {
            layout "us"
            options "compose:ralt,ctrl:nocaps"
        }
    }

    touchpad {
        tap
        // dwt
        // dwtp
        natural-scroll
        // accel-speed 0.2
        accel-profile "adaptive"
        scroll-factor 0.8
        // tap-button-map "left-right-middle"
    }

    mouse {
        natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
    }
}

output "eDP-1" {
    // off
    scale 2.0
    transform "normal"
    mode "3200x2000@90.000"
    position x=1600 y=0
}

layout {
    focus-ring {
        off
        width 3
        active-color "#7fc8ff"
        inactive-color "#505050"

        // active-gradient from="#80c8ff" to="#bbddff" angle=45

        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }
    border {
        width 2
        active-color "#ffc87f"
        inactive-color "#505050"
        // active-gradient from="#ffbb66" to="#ffc880" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    // You can customize the widths that "switch-preset-column-width" toggles between.
    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    // You can change the default width of the new windows.
    default-column-width { proportion 0.5; }
    gaps 9

    insert-hint {
        // off
        color "#ffc87f80"
        gradient from="#ffbb6680" to="#ffc88080" angle=45 relative-to="workspace-view"
    }
    struts {
        // left 48
        // right 48
        // top 64
        // bottom 64
    }

    center-focused-column "never"
    always-center-single-column
}

// #################
// ### AUTOSTART ###
// #################

spawn-at-startup "/usr/lib/polkit-kde-authentication-agent-1"
spawn-at-startup "dbus-update-activation-environment" "--systemd" "WAYLAND_DISPLAY" "XDG_CURRENT_DESKTOP=Hyprland"
spawn-at-startup "systemctl" "--user" "import-environment" "WAYLAND_DISPLAY" "XDG_CURRENT_DESKTOP"
spawn-at-startup "systemctl" "--user" "import-environment" "WAYLAND_DISPLAY" "XDG_CURRENT_DESKTOP" "QT_QPA_PLATFORMTHEME"
spawn-at-startup "waybar" "-c" "/home/moyy/.config/waybar/config.niri.jsonc"
// spawn-at-startup "albert"
spawn-at-startup "resources"
spawn-at-startup "wofi"
spawn-at-startup "1password" "--silent"
spawn-at-startup "swaync"
spawn-at-startup "nm-applet"
spawn-at-startup "blueman-applet"
spawn-at-startup "copyq" "--start-server"
spawn-at-startup "fcitx5" "-d --replace"
spawn-at-startup "hyprpaper"
spawn-at-startup "xwayland-satellite"
spawn-at-startup "env" "DISPLAY=:0" "pot"
// spawn-at-startup "xwayland-satellite" ":1"

environment {
    XDG_CURRENT_DESKTOP "niri"
    XDG_SESSION_TYPE "wayland"
    XDG_SESSION_DESKTOP "niri"
    ELECTRON_OZONE_PLATFORM_HINT "wayland"
    
    // QT
    QT_QPA_PLATFORM "wayland"
    QT_QPA_PLATFORMTHEME "qt5ct"
    QT_WAYLAND_DISABLE_WINDOWDECORATION "1"
    QT_AUTO_SCREEN_SCALE_FACTOR "1"
    // QT_STYLE_OVERRIDE "adwaita"
    QT_STYLE_OVERRIDE "kvantum"
    
    // GTK
    GTK_THEME "Adwaita-dark"
    
    // GPK
    MOZ_ENABLE_WAYLAND "1"
    SDL_VIDEODRIVER "wayland"
    XCURSOR_SIZE "20"
    GDK_SCALE "2"
    HYPRCURSOR_SIZE "20"
    GDK_BACKEND "wayland"
    OZONE_PLATFORM "wayland"
    WLR_NO_HARDWARE_CURSORS "1"
    XIM "fcitx"
    XIM_PROGRAM "fcitx"
    INPUT_METHOD "fcitx"
    // GTK_IM_MODULE "fcitx"
    QT_IM_MODULE "fcitx"
    XMODIFIERS "@im=fcitx"
    SDL_IM_MODULE "fcitx"

    // DISPLAY ":1"
    DISPLAY ":0"
}

cursor {
    hide-when-typing
    // hide-after-inactive-ms 1000
    xcursor-theme "Bibata-Modern-Ice"
    xcursor-size 20
}

prefer-no-csd

screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

hotkey-overlay {
    skip-at-startup
}

// Animation settings.
animations {
    workspace-switch {
        // off
        spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
    }

    horizontal-view-movement {
        // off
        spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
    }

    window-open {
        duration-ms 150
        curve "ease-out-expo"
        // spring damping-ratio=0.8 stiffness=800 epsilon=0.0001
    }

    window-movement {
        spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
    }
    window-resize {
        spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
    }

    config-notification-open-close {
        // off
        spring damping-ratio=0.6 stiffness=1000 epsilon=0.001
    }
}


workspace "arch"
workspace "browser"
workspace "code"
workspace "java"
workspace "what"
workspace "data"
workspace "note"
workspace "chat"
workspace "source"


window-rule {
    match app-id="librewolf"
    open-on-workspace "browser"
}

window-rule {
    match title=".*notion"
    match app-id="notion-app"
    open-on-workspace "note"
}

window-rule {
    match app-id="code-oss"
    match app-id="cursor-url-handler"
    open-on-workspace "code"
}

window-rule {
    match title=".*Discord"
    match app-id="materialgram"
    open-on-workspace "chat"
}

window-rule {
    match title="Resources"
    open-on-workspace "source"
}

binds { 
    // Mod-Shift-/, which is usually the same as Mod-?,
    // shows a list of important hotkeys.
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Assign apps
    Ctrl+space { spawn "wofi" "--show" "drun"; }
    Ctrl+Shift+space { spawn "1password" "--quick-access"; }
    Mod+E { spawn "nautilus"; }
    Mod+Alt+L { spawn "hyprlock"; }

    // Window actions
    Ctrl+Q { close-window; }
    Mod+Alt+M { quit; }
    Mod+Ctrl+Shift+M { power-off-monitors; }
    Mod+R { switch-preset-column-width; }
    Mod+Shift+C { center-column; }

    // Application shortcuts
    // Mod+Shift+V { spawn "albert" "show" "cp "; }
    Mod+Shift+V { spawn "copyq" "show"; }
    Mod+T { spawn "kitty"; }
    Mod+B { spawn "librewolf"; }
    Mod+C { spawn "cursor"; }
    Alt+A { spawn "curl" "127.0.0.1:60828/input_translate"; }
    Alt+D { spawn "curl" "127.0.0.1:60828/selection_translate"; }
    Alt+S { spawn "grimblast" "copysave" "area" "/home/moyy/.cache/com.pot-app.desktop/pot_screenshot_cut.png" "&&" "curl" "127.0.0.1:60828/ocr_translate?screenshot=false"; }
    Alt+Shift+S { spawn "grimblast" "copysave" "area" "/home/moyy/.cache/com.pot-app.desktop/pot_screenshot_cut.png" "&&" "curl" "127.0.0.1:60828/ocr_recognize?screenshot=false"; }
    
    // You can also use a shell:
    // Mod+T { spawn "bash" "-c" "notify-send hello && exec alacritty"; }
    Print { screenshot-screen; }
    Mod+Shift+S { screenshot; }
    Mod+Shift+P { screenshot-window; }
    
    // split
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }
    Mod+V  { consume-window-into-column; }
    Mod+P { expel-window-from-column; }

    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-down; }
    Mod+K     { focus-window-up; }
    Mod+L     { focus-column-right; }

    Mod+Shift+H     { move-column-left; }
    Mod+Shift+J     { move-window-down; }
    Mod+Shift+K     { move-window-up; }
    Mod+Shift+L     { move-column-right; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+0 { focus-workspace 10; }
    Mod+BracketLeft { focus-workspace 11; }
    Mod+BracketRight { focus-workspace 12; }
    Mod+Shift+1 { move-column-to-workspace 1; }
    Mod+Shift+2 { move-column-to-workspace 2; }
    Mod+Shift+3 { move-column-to-workspace 3; }
    Mod+Shift+4 { move-column-to-workspace 4; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }
    Mod+Shift+0 { move-column-to-workspace 10; }
    Mod+Shift+BracketLeft { move-column-to-workspace 11; }
    Mod+Shift+BracketRight { move-column-to-workspace 12; }


    // Mod+Home { focus-column-first; }
    // Mod+End  { focus-column-last; }

    // Mod+Shift+Left  { focus-monitor-left; }
    // Mod+Shift+Down  { focus-monitor-down; }
    // Mod+Shift+Up    { focus-monitor-up; }
    // Mod+Shift+Right { focus-monitor-right; }
    // Mod+Shift+H     { focus-monitor-left; }
    // Mod+Shift+J     { focus-monitor-down; }
    // Mod+Shift+K     { focus-monitor-up; }
    // Mod+Shift+L     { focus-monitor-right; }

    // Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    // Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    // Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    // Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    // Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    // Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    // Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    // Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

    Mod+Down      { focus-workspace-down; }
    Mod+Up        { focus-workspace-up; }
    Mod+Shift+Down { move-column-to-workspace-down; }
    Mod+Shift+Up   { move-column-to-workspace-up; }

    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Media keys
    XF86AudioRaiseVolume { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    XF86AudioLowerVolume { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    XF86AudioMute { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0"; }

    XF86AudioNext { spawn "playerctl" "next"; }
    XF86AudioPrev { spawn "playerctl" "previous"; }
    XF86AudioPlay { spawn "playerctl" "play-pause"; }
    XF86AudioStop { spawn "playerctl" "stop"; }
    
    XF86MonBrightnessUp { spawn "brightnessctl" "set" "+5%"; }
    XF86MonBrightnessDown { spawn "brightnessctl" "set" "5%-"; }
}

// Settings for debugging. Not meant for normal use.
// These can change or stop working at any point with little notice.
debug {
    // Make niri take over its DBus services even if it's not running as a session.
    // Useful for testing screen recording changes without having to relogin.
    // The main niri instance will *not* currently take back the services; so you will
    // need to relogin in the end.
    // dbus-interfaces-in-non-session-instances

    // Wait until every frame is done rendering before handing it over to DRM.
    // wait-for-frame-completion-before-queueing

    // Enable direct scanout into overlay planes.
    // May cause frame drops during some animations on some hardware.
    // enable-overlay-planes

    // Disable the use of the cursor plane.
    // The cursor will be rendered together with the rest of the frame.
    // disable-cursor-plane

    // Override the DRM device that niri will use for all rendering.
    // render-drm-device "/dev/dri/renderD129"

    // Enable the color-transformations capability of the Smithay renderer.
    // May cause a slight decrease in rendering performance.
    // enable-color-transformations-capability

    // Emulate zero (unknown) presentation time returned from DRM.
    // This is a thing on NVIDIA proprietary drivers, so this flag can be
    // used to test that we don't break too hard on those systems.
    // emulate-zero-presentation-time
}
